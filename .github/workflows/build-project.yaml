name: Build Project

on:
  push:
permissions:
  packages: write

jobs:
  mvn-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component:
          - envgene-inventory-service
          - environment-operational-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build java
        uses: netcracker/qubership-workflow-hub/actions/maven-snapshot-deploy@main
        with:
          java-version: 21
          maven-command: install -Dmaven.test.skip=true
          working-directory: ${{ matrix.component }}
          upload-artifact: "true"
          artifact-id: ${{ matrix.component }}
          maven-token: ${{ secrets.GITHUB_TOKEN }}
  perform-version:
    runs-on: ubuntu-latest
    needs: mvn-build
    outputs:
      metadata: "${{ steps.metadata.outputs.result }}"
      tags: "${{ steps.prepare_tags.outputs.tags }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create name
        uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
        id: metadata
        with:
          configuration-path: .github/metadata-action-config.yml

      - name: Echo metadata
        run: echo "Metadata result ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Prepare tags
        id: prepare_tags
        run: |
          BASE_TAG="${{ steps.metadata.outputs.result }}"
          EXTRA_TAG="${{ github.event.inputs.tags }}"
          if [ -n "$EXTRA_TAG" ]; then
            TAGS="${BASE_TAG}, ${EXTRA_TAG}"
          else
            TAGS="${BASE_TAG}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "tags: ${TAGS}" >> $GITHUB_STEP_SUMMARY
          echo "github.head_ref = ${{ github.head_ref }}"

      - name: Summary step
        run: |
          echo "**Metadata:** ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.prepare_tags.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

  docker-build:
    name: "Build Docker Images"
    needs: perform-version
    runs-on: ubuntu-latest
    steps:
      - name: Down load artifacts
        uses: actions/download-artifact@v4
        with:
          name: envgene-inventory-service

      - name: Down load artifacts
        uses: actions/download-artifact@v5
        with:
          name: environment-operational-service

      - name: Dirrectory listing
        run: |
          ls -la
          ls -la envgene-inventory-service
          ls -la envgene-inventory-service/target
          ls -la envgene-inventory-service/target/quarkus
          ls -la envgene-inventory-service/target/quarkus-app

          ls -la environment-operational-service
          ls -la environment-operational-service/target
          ls -la environment-operational-service/target/quarkus
          ls -la environment-operational-service/target/quarkus-app

      - name: Docker
        uses: netcracker/qubership-workflow-hub/actions/docker-action@main
        with:
          ref: ${{ github.ref }}
          dry-run: ${{ inputs.dry-run }}
          download-artifact: true
          download-artifact-path: ${{ github.workspace }}
          tags: ${{ needs.perform-version.outputs.tags }}
          component: |
            [
                {
                  "name": "envgene-inventory-service",
                  "file": "envgene-inventory-service/Dockerfile",
                  "context": "."
                }
            ]
        env:
          GITHUB_TOKEN:
            ${{ secrets.GITHUB_TOKEN }}

            #  {
            #     "name": "environment-operational-service",
            #     "file": "environment-operational-service/Dockerfile",
            #     "context": "environment-operational-service"
            #   }
