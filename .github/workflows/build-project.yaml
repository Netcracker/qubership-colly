name: Build Images
on:
  push:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Additional tags for Docker images (comma separated)'
        required: false
        default: ''
      dry-run:
        description: 'If true, the workflow will run in dry-run mode without pushing images'
        required: false
        default: true
        type: boolean
permissions:
  packages: write

jobs:
  mvn-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component:
          - envgene-inventory-service
          - environment-operational-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build java
        uses: netcracker/qubership-workflow-hub/actions/maven-snapshot-deploy@main
        with:
          java-version: 21
          maven-command: clean install
          working-directory: ${{ matrix.component }}
          upload-artifact: "true"
          artifact-id: ${{ matrix.component }}
          maven-token: ${{ secrets.GITHUB_TOKEN }}
  prepare-metadata:
    permissions:
      contents: read
    needs: mvn-build
    name: "Prepare Metadata"
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
      metadata: "${{ steps.metadata.outputs.result }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Load Docker Configuration
        id: load_component
        shell: bash
        run: |
          verify=$(cat "$GITHUB_WORKSPACE/.github/docker-dev-config.json" | jq '
            def verify_structure:
              .components as $components
              | .platforms as $platforms
              | ($components | type == "array")
              and (all($components[]; has("name") and has("file") and has("context")))
              and ($platforms | type == "string");
            verify_structure
            | if . then true else false end
          ')
          if [ "${verify}" == "true" ]; then
            echo "✅ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is valid"
            components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
            platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
          else
            echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid"
            echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "components=${components}" >> "$GITHUB_OUTPUT"
          echo "platforms=${platforms}" >> "$GITHUB_OUTPUT"

      - name: Calculate tags for images
        uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
        id: metadata
        with:
          short-sha: 11
          extra-tags: ${{ github.event.inputs.tags }}
          dry-run: ${{ inputs.dry-run }}
          configuration-path: .github/metadata-action-config.yml

  build:
    name: Build Docker Images
    needs: [prepare-metadata]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.prepare-metadata.outputs.components) }}
    steps:
      - name: Docker
        uses: netcracker/qubership-workflow-hub/actions/docker-action@main
        with:
          ref: ${{ github.ref }}
          dry-run: ${{ inputs.dry-run }}
          download-artifact: true
          download-artifact-path: '.'
          component: ${{ toJson(matrix.component) }}
          platforms: ${{ needs.prepare-metadata.outputs.platforms }}
          tags: ${{ needs.prepare-metadata.outputs.metadata }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
