name: Build Project

on:
  push:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Dry run mode'
        required: false
        default:  true
        type: boolean
      tags:
        description: 'Additional tags for docker images, comma separated'
        required: false
        default: ''
permissions:
  packages: write

jobs:
  mvn-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component:
          - envgene-inventory-service
          - environment-operational-service
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build java
        uses: netcracker/qubership-workflow-hub/actions/maven-snapshot-deploy@main
        with:
          java-version: 21
          maven-command: install -Dmaven.test.skip=true
          working-directory: ${{ matrix.component }}
          upload-artifact: "true"
          artifact-id: ${{ matrix.component }}
          maven-token: ${{ secrets.GITHUB_TOKEN }}
  prepare:
    needs: mvn-build
    permissions:
      contents: read
    name: "Prepare Images and Metadata"
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
      metadata: "${{ steps.metadata.outputs.result }}"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Load Docker Configuration
      id: load_component
      shell: bash
      run: |
        verify=$(cat "$GITHUB_WORKSPACE/.github/docker-dev-config.json" | jq '
          def verify_structure:
            .components as $components
            | .platforms as $platforms
            | ($components | type == "array")
            and (all($components[]; has("name") and has("file") and has("context")))
            and ($platforms | type == "string");
          verify_structure
          | if . then true else false end
        ')
        if [ "${verify}" == "true" ]; then
          echo "✅ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is valid"
          components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
          platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
        else
          echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid"
          echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        echo "components=${components}" >> "$GITHUB_OUTPUT"
        echo "platforms=${platforms}" >> "$GITHUB_OUTPUT"

    - name: Create tags for images
      uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
      id: metadata
      with:
        short-sha: 11
        extra-tags: ${{ inputs.tags }}
        default-template: "{{ref-name}}-{{timestamp}}, {{ref-name}}-{{short-sha}}, {{ref-name}}, {{short-sha}}"
        default-tag: "dev"
        dry-run: ${{ inputs.dry-run }}

  docker-build:
    name: "Build Docker Images"
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.prepare.outputs.components) }}
    steps:
      - name: Down load artifacts
        uses: actions/download-artifact@v4
        with:
          name: envgene-inventory-service

      - name: Down load artifacts
        uses: actions/download-artifact@v5
        with:
          name: environment-operational-service

      - name: Dirrectory listing
        run: |
          ls -la
          ls -la envgene-inventory-service
          ls -la envgene-inventory-service/target
          ls -la envgene-inventory-service/target/quarkus
          ls -la envgene-inventory-service/target/quarkus-app

          ls -la environment-operational-service
          ls -la environment-operational-service/target
          ls -la environment-operational-service/target/quarkus
          ls -la environment-operational-service/target/quarkus-app

      - name: Docker
        uses: netcracker/qubership-workflow-hub/actions/docker-action@main
        with:
          ref: ${{ github.ref }}
          dry-run: ${{ inputs.dry-run }}
          download-artifact: true
          component: ${{ toJson(matrix.component) }}
          platforms: ${{ needs.prepare.outputs.platforms }}
          tags: ${{ needs.prepare.outputs.metadata }}
        env:
          GITHUB_TOKEN:
            ${{ secrets.GITHUB_TOKEN }}