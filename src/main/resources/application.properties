cron.schedule=0 * * * * ?
%test.cron.schedule=0 0 0 1 1 ? 2020

%dev.env.instances.repo=
%test.env.instances.repo=

cloud.passport.folder=./git-repo
%dev.cloud.passport.folder=src/test/resources
%test.cloud.passport.folder=src/test/resources/gitrepo_with_cloudpassports

colly.config-map.versions.name=sd-versions
colly.config-map.versions.data-field-name=solution-descriptors-summary

colly.monitoring."running-pods".name=Running Pods
colly.monitoring."running-pods".query=count(kube_pod_status_phase{namespace=~"{namespace}",phase="Running"})
colly.monitoring."failed-deployments".name=Failed Deployments
colly.monitoring."failed-deployments".query=count(kube_deployment_status_replicas_unavailable{namespace=~"{namespace}"})
%dev.colly.monitoring."failed-deployments".query=vm_http_requests_total{path="/api/v1/query"}
%dev.colly.monitoring."running-pods".query=process_cpu_cores_available

#Security Configuration
%prod.quarkus.oidc.auth-server-url=
#%dev.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus #in case if keycloak was already running locally

quarkus.oidc.client-id=colly

quarkus.oidc.credentials.secret=
%dev.quarkus.oidc.credentials.secret=secret

quarkus.oidc.application-type=web-app

%test.quarkus.oidc.tenant-enabled=false

quarkus.oidc.logout.path=/q/oidc/logout
quarkus.oidc.logout.post-logout-path=/


# Security settings
quarkus.http.auth.permission.auth-check.paths=/q/*,/colly/auth-status
quarkus.http.auth.permission.auth-check.policy=permit

quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
# CORS
quarkus.http.cors=false

# logging
%dev.quarkus.log.category."io.quarkus.oidc".level=DEBUG
%dev.quarkus.log.category."io.quarkus.security".level=DEBUG



#Database configuration
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://host.docker.internal:5432/postgres
#%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres #in case if keycloak was already running locally

quarkus.datasource.username=postgres
quarkus.datasource.password=postgres

# auto create and update DB scheme
quarkus.hibernate-orm.database.generation=update
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.database.generation=drop-and-create

#Quarkus configuration

quarkus.swagger-ui.always-include=true

quarkus.log.level=INFO
%test.quarkus.log.category."org.qubership.colly".level=DEBUG


quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=10000
quarkus.oidc.authentication.add-openid-scope=true

# Token refresh configuration - auto refresh tokens on activity
quarkus.oidc.token.refresh-expired=true
quarkus.oidc.token.refresh-token-time-skew=10M
