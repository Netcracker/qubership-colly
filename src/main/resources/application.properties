cron.schedule=0 * * * * ?
%test.cron.schedule=0 0 0 1 1 ? 2020

kubeconfigs.path=/kubeconfigs
%test.kubeconfigs.path=./src/test/resources/kubeconfigs
%dev.kubeconfigs.path=./src/test/resources/kubeconfigs

%dev.env.instances.repo=
%test.env.instances.repo=

cloud.passport.folder=./git-repo
%dev.cloud.passport.folder=src/test/resources/gitrepo_with_cloudpassports
%test.cloud.passport.folder=src/test/resources/gitrepo_with_cloudpassports

environment.resolver.strategy=byName

colly.monitoring."running-pods".name=Running Pods
colly.monitoring."running-pods".query=count(kube_pod_status_phase{namespace=~"{namespace}",phase="Running"})
colly.monitoring."failed-deployments".name=Failed Deployments
colly.monitoring."failed-deployments".query=count(kube_deployment_status_replicas_unavailable{namespace=~"{namespace}"})
%dev.colly.monitoring."failed-deployments".query=vm_http_requests_total{path="/api/v1/query"}
%dev.colly.monitoring."running-pods".query=process_cpu_cores_available

#Database configuration
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://host.docker.internal:5432/postgres
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres

quarkus.datasource.username=postgres
quarkus.datasource.password=postgres

# auto create and update DB scheme
quarkus.hibernate-orm.database.generation=update
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

#Quarkus configuration

quarkus.swagger-ui.always-include=true

quarkus.log.level=INFO
%test.quarkus.log.category."org.qubership.colly".level=DEBUG
