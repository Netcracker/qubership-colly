version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: colly-postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - colly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: colly-redis
    ports:
      - "6379:6379"
    networks:
      - colly-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: colly-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8180
      - KC_HOSTNAME_STRICT_HTTPS=false

    ports:
      - "8180:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - colly-network
    command: start-dev
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n' >&3 && grep -q '200 OK' <&3"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  inventory-service:
    build:
      context: ./envgene-inventory-service
      dockerfile: Dockerfile
    image: envgene-inventory-service:latest
    container_name: inventory-service
    ports:
      - "8081:8081"
    environment:
      - QUARKUS_PROFILE=dev
      - QUARKUS_HTTP_PORT=8081
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/postgres
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
      - QUARKUS_OIDC_AUTH_SERVER_URL=http://host.docker.internal:8180/realms/quarkus
      - COLLY_EIS_ENV_INSTANCES_REPO=https://github.com/ormig/cloud-passport-samples.git
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "localhost:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - colly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/q/swagger-ui"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  operational-service:
    build:
      context: ./environment-operational-service
      dockerfile: Dockerfile
    image: environment-operational-service:latest
    container_name: operational-service
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_PROFILE=dev
      - QUARKUS_REST_CLIENT_ENVGENE_INVENTORY_SERVICE_URL=http://inventory-service:8081
      - QUARKUS_REDIS_HOSTS=redis://redis:6379
      - QUARKUS_OIDC_AUTH_SERVER_URL=http://host.docker.internal:8180/realms/quarkus
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "localhost:host-gateway"
    depends_on:
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
    networks:
      - colly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/swagger-ui"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  colly-network:
    driver: bridge

volumes:
  postgres_data:
